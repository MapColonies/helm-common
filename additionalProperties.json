{
    "type": "object",
    "properties": {
        "commonAnnotations": {
            "description": "Annotations to add for all k8s resources",
            "title": "commonAnnotations",
            "type": [
                "object",
                "null"
            ]
        },
        "commonLabels": {
            "description": "Labels to add for all k8s resources",
            "title": "commonLabels",
            "type": [
                "object",
                "null"
            ]
        },
        "configValues": {
            "description": "Deployment configuration (MAIN_OBJECT_BLOCK)",
            "properties": {
                "affinity": {
                    "description": "Affinity for pods assignment. NOTE: `podAffinityPreset`, `podAntiAffinityPreset`, and `nodeAffinityPreset` will be ignored when it's set",
                    "properties": {},
                    "title": "affinity",
                    "type": [
                        "object"
                    ]
                },
                "args": {
                    "description": "arguments for the containers that run in the Pod (diagnosticMode definition overrides it). https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container",
                    "title": "args",
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "autoscaling": {
                    "description": "Autoscaling configuration https://kubernetes.io/docs/concepts/workloads/autoscaling/",
                    "properties": {
                        "enabled": {
                            "description": "Is autoscaling defined for pods (currently should be FALSE, TRUE still not tested)",
                            "title": "autoscaling.enabled",
                            "type": [
                                "boolean"
                            ]
                        },
                        "hpa": {
                            "description": "HPA configuration for pods https://kubernetes.io/docs/tutorials/kubernetes-basics/scale/scale-intro/",
                            "properties": {
                                "enabled": {
                                    "description": "Enable HPA for pods",
                                    "title": "hpa.enabled",
                                    "type": [
                                        "boolean"
                                    ]
                                },
                                "maxReplicas": {
                                    "description": "Maximum number of replicas",
                                    "title": "hpa.maxReplicas",
                                    "type": [
                                        "number"
                                    ]
                                },
                                "minReplicas": {
                                    "description": "Minimum number of replicas",
                                    "title": "hpa.minReplicas",
                                    "type": [
                                        "number"
                                    ]
                                },
                                "targetCPU": {
                                    "description": "Target CPU utilization percentage",
                                    "title": "hpa.targetCPU(targetCPUUtilizationPercentage)",
                                    "type": [
                                        "number"
                                    ]
                                },
                                "targetMemory": {
                                    "description": "Target Memory utilization percentage",
                                    "title": "hpa.targetMemory(targetMemoryUtilizationPercentage)",
                                    "type": [
                                        "number",
                                        "null"
                                    ]
                                }
                            },
                            "required": [
                                "enabled"
                            ],
                            "title": "hpa",
                            "type": "object"
                        },
                        "vpa": {
                            "description": "VPA configuration for pods https://kubernetes.io/docs/tasks/configure-pod-container/resize-container-resources/",
                            "properties": {
                                "annotations": {
                                    "description": "Annotations for VPA resource",
                                    "properties": {},
                                    "title": "vpa.annotations",
                                    "type": [
                                        "object"
                                    ]
                                },
                                "controlledResources": {
                                    "description": "VPA List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory",
                                    "title": "vpa.controlledResources",
                                    "type": [
                                        "array"
                                    ]
                                },
                                "enabled": {
                                    "description": "Enable VPA for pods (currently should be FALSE, TRUE still not tested)",
                                    "title": "vpa.enabled",
                                    "type": [
                                        "boolean"
                                    ]
                                },
                                "maxAllowed": {
                                    "description": "VPA Max allowed resources for the pod",
                                    "properties": {},
                                    "title": "vpa.maxAllowed",
                                    "type": [
                                        "object"
                                    ]
                                },
                                "minAllowed": {
                                    "description": "VPA Min allowed resources for the pod",
                                    "properties": {},
                                    "title": "vpa.minAllowed",
                                    "type": [
                                        "object"
                                    ]
                                },
                                "updatePolicy": {
                                    "description": "Autoscaling update policy",
                                    "properties": {
                                        "updateMode": {
                                            "description": "Specifies whether recommended updates are applied when a Pod is started and whether recommended updates are applied during the life of a Pod",
                                            "enum": [
                                                "Off",
                                                "Initial",
                                                "Recreate",
                                                "Auto"
                                            ],
                                            "title": "vpa.updatePolicy.updateMode",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "updateMode"
                                    ],
                                    "title": "vpa.updatePolicy",
                                    "type": [
                                        "object"
                                    ]
                                }
                            },
                            "required": [
                                "enabled"
                            ],
                            "title": "vpa",
                            "type": "object"
                        }
                    },
                    "required": [
                        "enabled"
                    ],
                    "title": "autoscaling",
                    "type": "object"
                },
                "command": {
                    "description": "command for the containers that run in the Pod (diagnosticMode definition overrides it). https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container",
                    "title": "command",
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "containerPorts": {
                    "properties": {
                        "http": {
                            "type": "integer"
                        },
                        "https": {
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "containerSecurityContext": {
                    "description": "Configure Container Security Context https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
                    "properties": {
                        "enabled": {
                            "default": false,
                            "description": "Enable Container Security Context",
                            "title": "containerSecurityContext.enabled",
                            "type": [
                                "boolean"
                            ]
                        },
                        "runAsNonRoot": {
                            "default": true,
                            "description": "Set runAsNonRoot in container' Security Context",
                            "title": "containerSecurityContext.runAsNonRoot",
                            "type": [
                                "boolean"
                            ]
                        },
                        "runAsUser": {
                            "default": 1001,
                            "description": "Set runAsUser in container' Security Context",
                            "title": "containerSecurityContext.runAsUser",
                            "type": [
                                "number"
                            ]
                        }
                    },
                    "required": [
                        "enabled"
                    ],
                    "title": "containerSecurityContext",
                    "type": [
                        "object"
                    ]
                },
                "customLivenessProbe": {
                    "properties": {},
                    "type": "object"
                },
                "customReadinessProbe": {
                    "properties": {},
                    "type": "object"
                },
                "customStartupProbe": {
                    "properties": {},
                    "type": "object"
                },
                "deploymentAnnotations": {
                    "description": "Annotations for deployment https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/",
                    "properties": {},
                    "title": "deploymentAnnotations",
                    "type": [
                        "object"
                    ]
                },
                "extraEnvVars": {
                    "description": "Set additional environment variables to the containers",
                    "title": "extraEnvVars",
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "extraEnvVarsCM": {
                    "description": "ConfigMap containing extra env vars to be added to all pods (evaluated as a template)",
                    "title": "extraEnvVarsCM",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "extraEnvVarsSecret": {
                    "type": "string"
                },
                "extraVolumeMounts": {
                    "type": "array"
                },
                "extraVolumes": {
                    "type": "array"
                },
                "hostAliases": {
                    "description": "Pods host aliases",
                    "title": "hostAliases",
                    "type": [
                        "array"
                    ]
                },
                "image": {
                    "description": "MapColonies image details",
                    "properties": {
                        "debug": {
                            "default": false,
                            "description": "Enable image debug mode",
                            "title": "image.debug",
                            "type": [
                                "boolean"
                            ]
                        },
                        "digest": {
                            "description": "Image digest in the way sha256:aa.... Please note this parameter, if set, will override the image tag",
                            "title": "image.tag",
                            "type": [
                                "string"
                            ]
                        },
                        "pullPolicy": {
                            "description": "Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'",
                            "enum": [
                                "IfNotPresent",
                                "Always",
                                "Never"
                            ],
                            "title": "image.pullPolicy",
                            "type": "string"
                        },
                        "pullSecrets": {
                            "description": "Image pull secrets. Secrets must be manually created in the namespace.",
                            "title": "image.pullSecrets",
                            "type": [
                                "array"
                            ]
                        },
                        "repository": {
                            "description": "Image repository",
                            "title": "image.repository",
                            "type": [
                                "string"
                            ]
                        },
                        "tag": {
                            "description": "Image tag (immutable tags are recommended)",
                            "title": "image.tag",
                            "type": [
                                "string"
                            ]
                        }
                    },
                    "required": [
                        "repository",
                        "tag",
                        "pullPolicy"
                    ],
                    "title": "image",
                    "type": [
                        "object"
                    ]
                },
                "initContainers": {
                    "description": "Add additional init containers to the pods https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
                    "title": "initContainers",
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "lifecycleHooks": {
                    "properties": {},
                    "type": "object"
                },
                "livenessProbe": {
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        },
                        "failureThreshold": {
                            "type": "integer"
                        },
                        "initialDelaySeconds": {
                            "type": "integer"
                        },
                        "periodSeconds": {
                            "type": "integer"
                        },
                        "successThreshold": {
                            "type": "integer"
                        },
                        "timeoutSeconds": {
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "nodeAffinityPreset": {
                    "description": "Node afinity preset https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity",
                    "properties": {},
                    "title": "nodeAffinityPreset",
                    "type": [
                        "object"
                    ]
                },
                "nodeSelector": {
                    "description": "Recommended form of node selection constraint https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/",
                    "properties": {},
                    "title": "nodeSelector",
                    "type": [
                        "object"
                    ]
                },
                "podAffinityPreset": {
                    "description": "Pod affinity preset. NOTE: Ignored if `affinity` is set",
                    "enum": [
                        "soft",
                        "hard",
                        ""
                    ],
                    "title": "podAffinityPreset",
                    "type": "string"
                },
                "podAnnotations": {
                    "description": "Pod specific annotations",
                    "properties": {
                        "annotations": {
                            "description": "Additional pod annotations",
                            "properties": {},
                            "title": "podAnnotations.annotations",
                            "type": [
                                "object",
                                "null"
                            ]
                        },
                        "enabled": {
                            "default": true,
                            "description": "Add build-in annotations (checksum / prometheus)",
                            "title": "podAnnotations.enabled",
                            "type": [
                                "boolean"
                            ]
                        },
                        "resetOnConfigChange": {
                            "default": true,
                            "description": "Relative annnotation for reset onConfig change",
                            "title": "podAnnotations.resetOnConfigChange",
                            "type": [
                                "boolean"
                            ]
                        }
                    },
                    "required": [
                        "enabled",
                        "resetOnConfigChange"
                    ],
                    "title": "podAnnotations",
                    "type": "object"
                },
                "podAntiAffinityPreset": {
                    "description": "Pod affinity preset. NOTE: Ignored if `affinity` is set",
                    "enum": [
                        "soft",
                        "hard",
                        ""
                    ],
                    "title": "podAffinityPreset",
                    "type": "string"
                },
                "podLabels": {
                    "description": "Pod specific labels",
                    "properties": {},
                    "title": "podLabels",
                    "type": [
                        "object"
                    ]
                },
                "podSecurityContext": {
                    "description": "Configure Pods Security Context https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
                    "properties": {
                        "enabled": {
                            "default": false,
                            "description": "Enable pods' Security Context",
                            "title": "podSecurityContext.enabled",
                            "type": [
                                "boolean"
                            ]
                        },
                        "fsGroup": {
                            "description": "Set fsGroup in pods' Security Context",
                            "title": "podSecurityContext.fsGroup",
                            "type": [
                                "number"
                            ]
                        },
                        "fsGroupChangePolicy": {
                            "description": "Set filesystem group change policy for pods",
                            "enum": [
                                "Always",
                                "OnRootMismatch"
                            ],
                            "title": "podSecurityContext.fsGroupChangePolicy",
                            "type": "string"
                        },
                        "supplementalGroups": {
                            "title": "podSecurityContext.supplementalGroups",
                            "type": [
                                "array"
                            ]
                        },
                        "sysctls": {
                            "title": "podSecurityContext.sysctls",
                            "type": [
                                "array"
                            ]
                        }
                    },
                    "required": [
                        "enabled"
                    ],
                    "title": "podSecurityContext",
                    "type": [
                        "object"
                    ]
                },
                "priorityClassName": {
                    "description": "https://kubernetes.io/docs/reference/kubectl/generated/kubectl_create/kubectl_create_priorityclass/",
                    "title": "priorityClassName",
                    "type": [
                        "string"
                    ]
                },
                "prometheus": {
                    "description": "Prometheus metrics configuration",
                    "properties": {
                        "params": {
                            "description": "If the metrics endpoint uses query parameters then you can set any parameter (will be added as annotations)",
                            "title": "prometheus.params",
                            "type": [
                                "array"
                            ]
                        },
                        "path": {
                            "description": "If the metrics path is not `/metrics` override it",
                            "title": "prometheus.path",
                            "type": [
                                "string"
                            ]
                        },
                        "port": {
                            "description": "If the metrics are exposed on a different port to the service then set this appropriately",
                            "title": "prometheus.port",
                            "type": [
                                "number"
                            ]
                        },
                        "scheme": {
                            "description": "If the metrics endpoint is secured then you will need to set this to `https` \u0026 most likely set the `tls_config` of the scrape config",
                            "title": "prometheus.scheme",
                            "type": [
                                "string"
                            ]
                        },
                        "scrape": {
                            "description": "Flag for prometheus to scrape service metrics",
                            "title": "prometheus.scrape",
                            "type": [
                                "boolean"
                            ]
                        }
                    },
                    "title": "prometheus",
                    "type": "object"
                },
                "readinessProbe": {
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        },
                        "failureThreshold": {
                            "type": "integer"
                        },
                        "initialDelaySeconds": {
                            "type": "integer"
                        },
                        "periodSeconds": {
                            "type": "integer"
                        },
                        "successThreshold": {
                            "type": "integer"
                        },
                        "timeoutSeconds": {
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "replicaCount": {
                    "default": 1,
                    "description": "Number of replicas to deploy. Wiil be used if !hpa.enabled",
                    "title": "replicaCount",
                    "type": [
                        "number"
                    ]
                },
                "resources": {
                    "properties": {},
                    "type": "object"
                },
                "resourcesPreset": {
                    "type": "string"
                },
                "schedulerName": {
                    "description": "https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/",
                    "title": "schedulerName",
                    "type": [
                        "string"
                    ]
                },
                "sidecars": {
                    "type": "array"
                },
                "startupProbe": {
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        },
                        "failureThreshold": {
                            "type": "integer"
                        },
                        "initialDelaySeconds": {
                            "type": "integer"
                        },
                        "periodSeconds": {
                            "type": "integer"
                        },
                        "successThreshold": {
                            "type": "integer"
                        },
                        "timeoutSeconds": {
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "terminationGracePeriodSeconds": {
                    "description": "Seconds for pods need to terminate gracefully https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods",
                    "title": "terminationGracePeriodSeconds",
                    "type": [
                        "string"
                    ]
                },
                "tolerations": {
                    "description": "Tolerations for pods assignment https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/",
                    "title": "tolerations",
                    "type": [
                        "array"
                    ]
                },
                "topologySpreadConstraints": {
                    "description": "Topology Spread Constraints for pod assignment spread across your cluster among failure-domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods",
                    "items": {
                        "properties": {
                            "labelSelector1": {
                                "properties": {
                                    "matchLabels": {
                                        "properties": {
                                            "app.kubernetes.io/name": {
                                                "type": "string"
                                            }
                                        },
                                        "title": "topologySpreadConstraints.labelSelector.matchLabels",
                                        "type": [
                                            "object"
                                        ]
                                    }
                                },
                                "required": [
                                    "matchLabels"
                                ],
                                "title": "topologySpreadConstraints.labelSelector",
                                "type": [
                                    "object"
                                ]
                            },
                            "maxSkew": {
                                "type": "integer"
                            },
                            "topologyKey": {
                                "description": "is the key of node labels",
                                "enum": [
                                    "topology.kubernetes.io/region",
                                    "topology.kubernetes.io/zone",
                                    "topology.kubernetes.io/node"
                                ],
                                "title": "topologyKey",
                                "type": "string"
                            },
                            "whenUnsatisfiable": {
                                "description": "Indicates how to deal with a Pod if it doesn't satisfy the spread constraint",
                                "enum": [
                                    "DoNotSchedule",
                                    "ScheduleAnyway"
                                ],
                                "title": "whenUnsatisfiable",
                                "type": "string"
                            }
                        },
                        "required": [
                            "labelSelector1"
                        ],
                        "type": "object"
                    },
                    "title": "topologySpreadConstraints",
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "updateStrategy": {
                    "description": "Update strategy of deploy https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy",
                    "properties": {},
                    "title": "updateStrategy",
                    "type": [
                        "object"
                    ]
                }
            },
            "required": [
                "deploymentAnnotations",
                "autoscaling",
                "replicaCount",
                "podAnnotations",
                "podSecurityContext",
                "image",
                "containerSecurityContext"
            ],
            "title": "configValues",
            "type": "object"
        },
        "diagnosticMode": {
            "properties": {
                "enabled": {
                    "description": "Is container command/args should be defined",
                    "title": "diagnosticMode.enabled",
                    "type": [
                        "boolean"
                    ]
                }
            },
            "required": [
                "enabled"
            ],
            "title": "diagnosticMode",
            "type": [
                "object"
            ]
        },
        "global": {
            "properties": {
                "cloudProvider": {
                    "properties": {},
                    "type": "object"
                },
                "configManagment": {
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                },
                "currentSubChart": {
                    "type": "string"
                },
                "deploymentFlavor": {
                    "type": "string"
                },
                "environment": {
                    "type": "string"
                },
                "imageRegistry": {
                    "type": "string"
                },
                "ingestion": {
                    "properties": {
                        "overrideGlobal": {
                            "properties": {
                                "testGlobalVal": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "metrics": {
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        },
                        "url": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "overrideGlobal": {
                    "properties": {
                        "testGlobalVal": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "serving": {
                    "properties": {
                        "heights": {
                            "properties": {
                                "overrideGlobal": {
                                    "properties": {
                                        "tracing": {
                                            "properties": {
                                                "enabled": {
                                                    "type": "boolean"
                                                },
                                                "url1": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "releaseVersion": {
                                    "type": "string"
                                },
                                "testGlobalVal": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "overrideGlobal": {
                            "properties": {
                                "testGlobalVal": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "testGlobalVal": {
                    "type": "string"
                },
                "testTemplated": {
                    "type": "string"
                },
                "tlsCertificates": {
                    "properties": {
                        "caCertificate": {
                            "type": "null"
                        },
                        "certificate": {
                            "type": "null"
                        },
                        "key": {
                            "type": "null"
                        }
                    },
                    "type": "object"
                },
                "tracing": {
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        },
                        "url": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ingress": {
            "properties": {
                "annotations": {
                    "properties": {},
                    "type": "object"
                },
                "apiVersion": {
                    "type": "string"
                },
                "cors": {
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        },
                        "origin": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "enabled": {
                    "type": "boolean"
                },
                "extraHosts": {
                    "type": "array"
                },
                "extraPaths": {
                    "type": "array"
                },
                "extraRules": {
                    "type": "array"
                },
                "extraTls": {
                    "type": "array"
                },
                "hostname": {
                    "type": "string"
                },
                "ingressClassName": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "pathType": {
                    "type": "string"
                },
                "selfSigned": {
                    "type": "boolean"
                },
                "tls": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "kubeVersion": {
            "description": "\u003e= 1.13.0 \u003c 1.15.0",
            "title": "kubeVersion",
            "type": [
                "string",
                "null"
            ]
        },
        "persistence": {
            "properties": {
                "enabled": {
                    "description": "Is \"shared\" persistance defined",
                    "title": "persistence.enabled",
                    "type": [
                        "boolean"
                    ]
                }
            },
            "required": [
                "enabled"
            ],
            "title": "persistence",
            "type": [
                "object"
            ]
        },
        "podSecurityPolicy": {
            "properties": {
                "create": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "rbac": {
            "properties": {
                "create": {
                    "type": "boolean"
                },
                "rules": {
                    "type": "array"
                }
            },
            "type": "object"
        },
        "route": {
            "properties": {
                "annotations": {
                    "properties": {
                        "haproxy.router.openshift.io/rewrite-target": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "enabled": {
                    "type": "boolean"
                },
                "extraRules": {
                    "properties": {},
                    "type": "object"
                },
                "hostname": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "targetPort": {
                    "type": "integer"
                },
                "timeout": {
                    "properties": {
                        "duration": {
                            "type": "string"
                        },
                        "enabled": {
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                },
                "tls": {
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        },
                        "insecureEdgeTerminationPolicy": {
                            "type": "string"
                        },
                        "termination": {
                            "type": "string"
                        },
                        "useCerts": {
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "service": {
            "properties": {
                "annotations": {
                    "properties": {},
                    "type": "object"
                },
                "clusterIP": {
                    "type": "string"
                },
                "externalTrafficPolicy": {
                    "type": "string"
                },
                "extraPorts": {
                    "type": "array"
                },
                "loadBalancerIP": {
                    "type": "string"
                },
                "loadBalancerSourceRanges": {
                    "type": "array"
                },
                "nodePorts": {
                    "properties": {
                        "http": {
                            "type": "string"
                        },
                        "https": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "ports": {
                    "properties": {
                        "http": {
                            "type": "integer"
                        },
                        "https": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "protocol": {
                    "type": "string"
                },
                "sessionAffinity": {
                    "type": "string"
                },
                "sessionAffinityConfig": {
                    "properties": {},
                    "type": "object"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "serviceAccount": {
            "description": "ServiceAccount configuration",
            "properties": {
                "annotations": {
                    "description": "Additional Service Account annotations",
                    "properties": {},
                    "title": "serviceAccount.annotations",
                    "type": [
                        "object",
                        "null"
                    ]
                },
                "create": {
                    "description": "Specifies whether a ServiceAccount should be created",
                    "title": "serviceAccount.create",
                    "type": [
                        "boolean"
                    ]
                },
                "name": {
                    "description": "The name of the ServiceAccount to use.",
                    "title": "serviceAccount.name",
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "create"
            ],
            "title": "serviceAccount",
            "type": [
                "object"
            ]
        },
        "volumePermissions": {
            "properties": {
                "enabled": {
                    "description": "Is \"shared\" initContainers defined. Will be included if volumePermissions.enabled \u0026\u0026 persistence.enabled",
                    "title": "volumePermissions.enabled",
                    "type": [
                        "boolean"
                    ]
                }
            },
            "required": [
                "enabled"
            ],
            "title": "volumePermissions",
            "type": [
                "object"
            ]
        }
    },
    "required": [
        "commonAnnotations",
        "commonLabels",
        "configValues",
        "diagnosticMode",
        "persistence",
        "serviceAccount",
        "volumePermissions"
    ]
}