## @skip global Description?

global:
  cloudProvider: {}
  deploymentFlavor: openshift
  imageRegistry: my-registry-url.io
  environment: development
  ## Configuration Manager
  configManagment:
    enabled: false
  ## Certificates shoule be handled on global level in order to be common
  tlsCertificates:
    certificate:
    caCertificate:
    key:
  ## TEST START
  currentSubChart: serving
  testTemplated: '{{ include "common.names.name" . }}'
  ##$$ Tracing configuration
  ##$$ @param global.tracing
  ##$$ E.g
  ##$$ tracing:
  ##$$  enabled: true
  ##$$  url: http://otel-collector:4318/v1/traces
  ##$$
  tracing:
    enabled: true
    url: GLOBAL_http://otel-collector:4318/v1/traces
  metrics:
    enabled: true
    url: http://otel-collector:4318/v1/metrics
  testGlobalVal: info_GLOBAL
  overrideGlobal:
    testGlobalVal: info_GLOBAL_OVER
  serving:
    overrideGlobal:
      testGlobalVal: info_GLOBAL_SERVING_OVER
    heights:
        overrideGlobal:
          tracing:
            enabled: true
            url1: CHART_http://otel-collector:4318/v1/traces
        releaseVersion: 'releaseVersion_OVER'
        testGlobalVal: info_GLOBAL_SERVING_HEIGHTS_OVER
  ingestion:
    overrideGlobal:
      testGlobalVal: info
  ## TEST END

# ----------- SHARED FOR DIFFERENT SECTIONS ----------
## @section shared parameters
## @descriptionStart
## These params are shared between different sections.
## @descriptionEnd
## @param kubeVersion [string] Kubernetes version
kubeVersion: # @schema title: kubeVersion ; description: >= 1.13.0 < 1.15.0 
## @param commonLabels [array] Labels to add for all k8s resources
commonLabels:  # @schema type: [array, null]
## @param commonAnnotations [array] Annotations to add for all k8s resources
commonAnnotations: # @schema type: [array, null]
# ----------- initContainers ----------
## volumePermissions 
volumePermissions:
  ## @param volumePermissions.enabled Is initContainers "process" should be included
  enabled: false
# ------ volumes and volumeMounts -----
## Persistence
persistence:
  ## @param persistence.enabled Is initContainers "process" should be included also volumes are defined 
  enabled: false
# ----------- command/debug -----------
## diagnosticMode
diagnosticMode:
  ## @param diagnosticMode.enabled Is container command/args should be defined
  enabled: false

# ----------- DEPLOYMENT (MAIN_OBJECT_BLOCK) ----------
## @section configValues parameters
## @descriptionStart
## This description starts in a new line instead of the same line of description start tag. It does not have multiple lines.
## @descriptionEnd
configValues:
  ## @param configValues.deploymentAnnotations Annotations for configValues deployment
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ## E.g. PROVIDE SPLUNK INDEX
  ## deploymentAnnotations:
  ##   collectord.io/index: ''
  deploymentAnnotations: {}
  ## Autoscaling configuration
  ## ref: https://kubernetes.io/docs/concepts/workloads/autoscaling/
  ##
  autoscaling:
    ## @param configValues.autoscaling.vpa.enabled Enable VPA for pods (currently should be FALSE, TRUE still not tested)
    ## @param configValues.autoscaling.vpa.annotations Annotations for VPA resource
    ## @param configValues.autoscaling.vpa.controlledResources VPA List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory
    ## @param configValues.autoscaling.vpa.maxAllowed VPA Max allowed resources for the pod
    ## @param configValues.autoscaling.vpa.minAllowed VPA Min allowed resources for the pod
    ##
    vpa:
      enabled: false
      annotations: {}
      controlledResources: []
      maxAllowed: {}
      minAllowed: {}
      ## @param configValues.autoscaling.vpa.updatePolicy.updateMode Autoscaling update policy
      ## Specifies whether recommended updates are applied when a Pod is started and whether recommended updates are applied during the life of a Pod
      ## Possible values are "Off", "Initial", "Recreate", and "Auto".
      ##
      updatePolicy:
        updateMode: Auto
    ## @param configValues.autoscaling.hpa.enabled Enable HPA for pods
    ## @param configValues.autoscaling.hpa.minReplicas Minimum number of replicas
    ## @param configValues.autoscaling.hpa.maxReplicas Maximum number of replicas
    ## @param configValues.autoscaling.hpa.targetCPU Target CPU utilization percentage
    ## @param configValues.autoscaling.hpa.targetMemory Target Memory utilization percentage
    ##
    hpa:
      enabled: false
      minReplicas: ""
      maxReplicas: ""
      targetCPU: ""
      targetMemory: ""
  ## @param configValues.replicaCount Number of replicas to deploy
  ##
  replicaCount: 1
  ## @param configValues.updateStrategy Update strategy of deploy. For more details see values.yaml
  ##
  updateStrategy: {}
    ## ONLY FOR DEPLOYMENTS:
    ## @_param configValues.updateStrategy.type deployment strategy type. Can be set to RollingUpdate or Recreate
    ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
    ## ONLY FOR STATEFULSETS:
    ## @_param configValues.updateStrategy.type statefulset strategy type. Can be set to RollingUpdate or OnDelete
    ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
    # type: RollingUpdate
  ## @param configValues.podLabels Extra labels for pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## Pod annotations configuration
  ## ref: https://kubernetes.io/docs/concepts/workloads/autoscaling/
  ## @param configValues.podAnnotations.enabled Enable pod annotations
  ## @param configValues.podAnnotations.resetOnConfigChange Relative annnotation for reset onConfig change   
  ## @param configValues.podAnnotations.annotations Additional pod annotations      
  ##
  podAnnotations:
    enabled: true
    resetOnConfigChange: true
    annotations: {}
  ## Prometheus metrics configuration
  ## @param configValues.prometheus.scrape Flag to prometheus to scrape service metrics
  ## @param configValues.prometheus.port If the metrics are exposed on a different port to the service then set this appropriately
  ## @param configValues.prometheus.path If the metrics path is not `/metrics` override this
  ## @param configValues.prometheus.scheme If the metrics endpoint is secured then you will need to set this to `https` & most likely set the `tls_config` of the scrape config
  ## @param configValues.prometheus.params If the metrics endpoint uses query parameters then you can set any parameter
  ## E.g. prometheus: 
  ##        params:
  ##        - format: prometheus
  ## 
  prometheus:
    scrape: true
    port: 8000
    path: /other-then-metrics
    scheme: http
    params: []

  # metrics:
  #   enabled: true
  #   url: http://otel-collector:4318/v1/metrics
  #   prometheus:
  #     scrape: true
  #     port: 8000
  #   buckets:
  #     - 1
  #     - 10
  #     - 50
  #     - 100
  #     - 150
  #     - 250

  ## @param configValues.automountServiceAccountToken Mount Service Account token for pods
  ##
  automountServiceAccountToken: false
  ## @param configValues.hostAliases Pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ## E.g. hostAliases: 
  ##      - ip: "127.0.0.1"
  ##        hostnames:
  ##        - "foo.local"
  ##        - "bar.local"
  ##      - ip: "10.1.2.3"
  ##        hostnames:
  ##        - "foo.remote"
  ##        - "bar.remote"
  ##
  hostAliases: []
  ## @param configValues.affinity Affinity for pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `configValues.podAffinityPreset`, `configValues.podAntiAffinityPreset`, and `configValues.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param configValues.podAffinityPreset Pod affinity preset. Ignored if `configValues.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param configValues.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `configValues.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## @param configValues.nodeAffinityPreset Node afinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ## E.g. 
  ## nodeAffinityPreset:
  ##    ## @_param configValues.nodeAffinityPreset.type Node affinity preset type. Ignored if `configValues.affinity` is set. Allowed values: `soft` or `hard`
  ##    ##
  ##    type: ""
  ##    ## @_param configValues.nodeAffinityPreset.key Node label key to match. Ignored if `configValues.affinity` is set
  ##    ##
  ##    key: ""
  ##    ## @_param configValues.nodeAffinityPreset.values Node label values to match. Ignored if `configValues.affinity` is set
  ##    ## E.g.
  ##    ## values:
  ##    ##   - e2e-az1
  ##    ##   - e2e-az2
  ##    ##
  ##    values: []
  ##
  nodeAffinityPreset: {}
  ## @param configValues.nodeSelector Node labels for pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param configValues.tolerations Tolerations for pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ## E.g.
  ## tolerations: 
  ##   - key: foo
  ##     operator: Equal
  ##     value: bar
  ##
  tolerations: []
  ## @param configValues.priorityClassName pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param configValues.schedulerName Name of the k8s scheduler (other than default) for pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## configValues.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: # @schema title: topologySpreadConstraints ; description: Topology Spread Constraints for pod assignment spread across your cluster among failure-domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
    -
      ## @param configValues.topologySpreadConstraints[0].maxSkew Responsible on Pod placement between zones
      ##
      maxSkew: 1
      ## @param configValues.topologySpreadConstraints[0].topologyKey Responsible on Pod placement between zones
      ##
      topologyKey: topology.kubernetes.io/zone # @schema enum: [topology.kubernetes.io/region, topology.kubernetes.io/zone, topology.kubernetes.io/node] ; title: topologyKey ; description: is the key of node labels
      ## @param configValues.topologySpreadConstraints[0].whenUnsatisfiable Indicates how to deal with a Pod if it doesn't satisfy the spread constraint
      ##
      whenUnsatisfiable: DoNotSchedule # @schema enum: [DoNotSchedule, ScheduleAnyway] ; title: whenUnsatisfiable ; description: Indicates how to deal with a Pod if it doesn't satisfy the spread constraint
      ## @param configValues.topologySpreadConstraints[0].labelSelector Is used to find matching Pods
      ## @skip configValues.topologySpreadConstraints[0].labelSelector
      ##
      labelSelector:
        matchLabels:
          app.kubernetes.io/name: '{{ include "common.names.name" . }}'
  
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param configValues.podSecurityContext.enabled Enable pods' Security Context
  ## @param configValues.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy for pods
  ## @param configValues.podSecurityContext.sysctls Set kernel settings using the sysctl interface for pods
  ## @param configValues.podSecurityContext.supplementalGroups Set filesystem extra groups for pods
  ## @param configValues.podSecurityContext.fsGroup Set fsGroup in pods' Security Context
  ##
  podSecurityContext:
    enabled: false
    fsGroup: 1001
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
  ## @param configValues.terminationGracePeriodSeconds Seconds for pods need to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## @param configValues.initContainers Add additional init containers to the pods
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## E.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []
  ## MapColonies image (---- containers ---- deployment section)
  ## @_param configValues.image.registry Image registry. Taken automatically from GLOBAL, should be overriden when in custom ONLY.
  ## @param configValues.image.repository Image repository
  ## @skip configValues.image.tag image tag (immutable tags are recommended)
  ## @param configValues.image.digest image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
  ## @param configValues.image.pullPolicy image pull policy. Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## @param configValues.image.pullSecrets image pull secrets. Secrets must be manually created in the namespace.
  ## @param configValues.image.debug Enable image debug mode
  ##
  image:
    # registry: docker.io
    repository: dem-heights
    tag: v2.1.7
    digest: ""
    pullPolicy: IfNotPresent # @schema enum: [IfNotPresent, Always, Never] ; title: image pull policy ; description: Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    pullSecrets: []
    debug: false
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param configValues.containerSecurityContext.enabled Enabled container' Security Context
  ## @param configValues.containerSecurityContext.runAsNonRoot Set runAsNonRoot in container' Security Context
  ## @param configValues.containerSecurityContext.runAsUser Set runAsUser in container' Security Context
  ## @_param configValues.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
  ## @_param configValues.containerSecurityContext.readOnlyRootFilesystem Set readOnlyRootFilesystem in container' Security Context
  ## @_param configValues.containerSecurityContext.privileged Set privileged in container' Security Context
  ## @_param configValues.containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in container' Security Context
  ## @_param configValues.containerSecurityContext.capabilities.drop List of capabilities to be dropped in container
  ## @_param configValues.containerSecurityContext.seccompProfile.type Set seccomp profile in container
  ##
  containerSecurityContext:
    enabled: false
    runAsNonRoot: true
    runAsUser: 1001
    # seLinuxOptions: {}
    # runAsGroup: 1001
    # readOnlyRootFilesystem: true
    # privileged: false
    # allowPrivilegeEscalation: false
    # capabilities:
    #  drop: ["ALL"]
    # seccompProfile:
    #  type: "RuntimeDefault"
  ## @param configValues.command Override default container command (useful when using custom images)
  ## E.g:
  ##  command:
  ##    - sleep
  ##
  command: []
  ## @param configValues.args Override default container args (useful when using custom images)
  ## E.g:
  ##  args:
  ##    - infinity
  ##
  ##
  args: []
  ## @param configValues.extraEnvVars Array with extra environment variables to add to containers
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param configValues.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for containers
  ##
  extraEnvVarsCM: ""
  ## @param configValues.extraEnvVarsSecret Name of existing Secret containing extra env vars for containers
  ##
  extraEnvVarsSecret: ""
  ## @param configValues.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ## Example:
  ## resources:
  ##   requests:
  ##     cpu: 2
  ##     memory: 512Mi
  ##   limits:
  ##     cpu: 3
  ##     memory: 1024Mi
  ##
  resources: {}
  ## Resource requests and limits
  ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## @param configValues.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, small, medium, large, xlarge, 2xlarge). This is ignored if configValues.resources is set (configValues.resources is recommended for production).
  ## More information: https://github.com/MapColonies/helm-common/blob/master/common-helpers/templates/_resources.tpl
  ##
  resourcesPreset: nano
  ## @param configValues.containerPorts.http HTTP container port
  ## @param configValues.containerPorts.https HTTPS container port
  ##
  containerPorts:
    http: 80
    https: 443
  ## @param configValues.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## Configure extra options for containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param configValues.livenessProbe.enabled Enable livenessProbe on containers
  ## @param configValues.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param configValues.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param configValues.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param configValues.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param configValues.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  ## @param configValues.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param configValues.readinessProbe.enabled Enable readinessProbe on containers
  ## @param configValues.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param configValues.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param configValues.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param configValues.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param configValues.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  ## @param configValues.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## @param configValues.startupProbe.enabled Enable startupProbe on containers
  ## @param configValues.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param configValues.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param configValues.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param configValues.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param configValues.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  ## @param configValues.lifecycleHooks for containers to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param configValues.extraVolumes Optionally specify extra list of additional volumes for the pods
  ##
  extraVolumes: []
  ## @param configValues.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the containers
  ##
  extraVolumeMounts: []
  ## @param configValues.sidecars Add additional sidecar containers to the pods
  ## E.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []

# env:
#   port: 8080
#   # targetPort: 8000
#   # protocol: TCP
#   logLevel: info
#   logPrettyPrintEnabled: false
#   responseCompressionEnabled: true
#   requestPayloadLimit: 8mb
#   metrics:
#     buckets:
#       - 1
#       - 10
#       - 50
#       - 100
#       - 150
#       - 250
#   cswDemUrl: ''
#   s3GatewayDemUrl: ''
#   synchRecordsInterval: 600000
#   protoFileUrl: ''
#   serviceVersion: ''
#   maximumTilesPerRequest: 250

# ----------- ROUTE ----------
## @section route parameters
route:
  ## @param route.enabled Is route enabled for service
  ##
  enabled: true
  ## @param route.annotations Additional custom annotations for route
  ## @skip route.annotations
  ##
  annotations: 
    haproxy.router.openshift.io/rewrite-target: /
  ## @param route.hostname Route hostname(DNS)
  ##
  hostname: ''
  ## @param route.path Route path
  ##
  path: /api/heights/v1
  ## @param route.targetPort Route target port 
  ##
  targetPort: 8000
  ## Route SSL configuration
  ## ref: https://docs.openshift.com/container-platform/3.11/architecture/networking/routes.html
  ## @param route.tls.enabled is route SSL enabled 
  ## @param route.tls.useCerts Is route should use certificates
  ## @param route.tls.termination Secure routes provide the ability to use several types of TLS termination to serve certificates to the client (edge | passthrough | reencrypt)
  ## @param route.tls.insecureEdgeTerminationPolicy Edge-terminated routes can specify policy that enables traffic on insecure schemes (HTTP) to be disabled, (None or empty (for disabled) | Allow | Redirect)
  ## 
  tls:
    enabled: true
    useCerts: true
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  ## @param route.extraRules Custom additional route rules
  ##
  extraRules: {}
  ## Is timeout defined for route (defaults to 30s by openshift)
  ## @param route.timeout.enabled Timeout enabled 
  ## @param route.timeout.duration Timeout duration. Supported units (us, ms, s, m, h, d)
  ##
  timeout:
    enabled: false 
    duration: 60s

# ----------- INGRESS ----------
## @section ingress parameters
ingress:
  ## @param ingress.enabled Is route enabled for service
  ##
  enabled: true
  ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
  ##
  apiVersion: ""
  ## @param ingress.type Ingress type supported by OS/K8S. Values: 'nginx-org' | 'nginx-kubernetes'
  ## 
  type: nginx-org
  ## @param ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  ## Use this parameter to set the required annotations for cert-manager, see
  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  ## e.g:
  ## annotations:
  ##   cert-manager.io/cluster-issuer: cluster-issuer-name
  ##
  annotations: {}
  ## @param ingress.pathType Ingress path type
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
  ##
  pathType: Prefix
  ## @param ingress.hostname Route hostname(DNS)
  ##
  hostname: COMPONENT_NAME.local
  ## @param ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
  ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
  ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
  ##
  ingressClassName: ""
  ## @param ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
  ## e.g:
  ## extraHosts:
  ##   - name: COMPONENT_NAME.local
  ##     path: /
  ##
  extraHosts: []
  ## @param ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
  ## e.g:
  ## extraPaths:
  ## - path: /*
  ##   backend:
  ##     serviceName: ssl-redirect
  ##     servicePort: use-annotation
  ##
  extraPaths: []
  ## @param ingress.path Default path for the ingress record
  ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
  ##
  path: /dem-heights
  ## @param ingress.extraRules Additional rules to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
  ## e.g:
  ## extraRules:
  ## - host: example.local
  ##     http:
  ##       path: /
  ##       backend:
  ##         service:
  ##           name: example-svc
  ##           port:
  ##             name: http
  ##
  extraRules: []
  ## @param ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## e.g:
  ## extraTls:
  ## - hosts:
  ##     - %%COMPONENT_NAME%%.local
  ##   secretName: %%COMPONENT_NAME%%.local-tls
  ##
  extraTls: []
  ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
  ##
  selfSigned: false
  ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
  ## You can:
  ##   - Use the `ingress.secrets` parameter to create this TLS secret
  ##   - Rely on cert-manager to create it by setting the corresponding annotations
  ##   - Rely on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
  ##
  tls: true
  ## ingress CORS 
  ## @param ingress.cors.enabled Is CORS enabled
  ## @param ingress.cors.origin Is CORS allowed origin
  ##
  cors:
    enabled: true
    origin: '*'

# ----------- SERVICE ----------
## @section service parameters
service:
  ## @param service.type service type (NodePort | ClusterIP | LoadBalancer | ExternalName)
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  ##
  type: NodePort
  ## @param service.protocol Protocol for service (TCP | SCTP | UDP)
  ## ref: https://kubernetes.io/docs/reference/networking/service-protocols/
  ##
  protocol: TCP
  ## @param service.annotations Additional custom annotations for service
  ##
  annotations: {}
  ## @param service.clusterIP service Cluster IP
  ## e.g.:
  ## clusterIP: None
  ##
  clusterIP: ""
  ## @param service.sessionAffinity Control where client requests go, to the same pod or round-robin
  ## Values: ClientIP or None
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/
  ##
  sessionAffinity: ""
  ## @param service.sessionAffinityConfig Additional settings for the sessionAffinity
  ## sessionAffinityConfig:
  ##   clientIP:
  ##     timeoutSeconds: 300
  ##
  sessionAffinityConfig: {}
  ## @param service.externalTrafficPolicy service external traffic policy. Probably default should be "Cluster"
  ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: ""
  ## @param service.loadBalancerSourceRanges service Load Balancer sources
  ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ## e.g:
  ## loadBalancerSourceRanges:
  ##   - 10.10.10.0/24
  ##
  loadBalancerSourceRanges: []
  ## @param service.loadBalancerIP service Load Balancer IP
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
  ##
  loadBalancerIP: ""
  ## @param service.ports.http service HTTP port
  ## @param service.ports.https service HTTPS port
  ##
  ports:
    http: 80
    https: ""
  ## Node ports to expose
  ## @param service.nodePorts.http Node port for HTTP
  ## @param service.nodePorts.https Node port for HTTPS
  ## NOTE: choose port between <30000-32767>
  ##
  nodePorts:
    http: ""
    https: ""
  ## @param service.extraPorts Extra ports to expose in service (normally used with the `sidecars` value)
  ##
  extraPorts: []

# ----------- SERVICEACCOUNT ----------
## @section serviceAccount parameters
serviceAccount:
  ## @param serviceAccount.create Specifies whether a ServiceAccount should be created
  ##
  create: true
  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the common.names.fullname template
  ##
  name: ""
  ## @param serviceAccount.annotations Additional Service Account annotations (evaluated as a template)
  ##
  annotations: {}
  ## @param serviceAccount.automountServiceAccountToken Automount service account token for the server service account
  ##
  automountServiceAccountToken: true

# ----------- RBAC ----------
## @section rbac parameters
rbac:
  ## @param rbac.create Specifies whether RBAC resources should be created
  ##
  create: false
  ## @param rbac.rules Custom RBAC rules to set
  ## e.g:
  ## rules:
  ##   - apiGroups:
  ##       - ""
  ##     resources:
  ##       - pods
  ##     verbs:
  ##       - get
  ##       - list
  ##
  rules: []

# ----------- PODSECURITYPOLICY ----------
## @section podSecurityPolicy parameters
## ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/
##
podSecurityPolicy:
  ## @param podSecurityPolicy.create Whether to create a PodSecurityPolicy. WARNING: PodSecurityPolicy is deprecated in Kubernetes v1.21 or later, unavailable in v1.25 or later
  ##
  create: false
  ## @param podSecurityPolicy.enabled Enable PodSecurityPolicy's RBAC rules
  ##
  enabled: false